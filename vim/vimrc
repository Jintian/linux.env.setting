" vundle setting
set nocompatible " be iMproved
filetype off " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'vim-scripts/SQLUtilities'
Bundle 'vim-scripts/matchit.zip'
Bundle 'Shougo/neocomplcache'
Bundle 'jQuery'
Bundle 'rstacruz/sparkup'
Bundle 'tComment'
nnoremap // :TComment<CR>
vnoremap // :TComment<CR>
Bundle 'L9'
Bundle 'FuzzyFinder'
let g:fuf_modesDisable = [] " {{{
nnoremap <silent> <LocalLeader>h :FufHelp<CR>
nnoremap <silent> <LocalLeader>2  :FufFileWithCurrentBufferDir<CR>
nnoremap <silent> <LocalLeader>@  :FufFile<CR>
nnoremap <silent> <LocalLeader>3  :FufBuffer<CR>
nnoremap <silent> <LocalLeader>4  :FufDirWithCurrentBufferDir<CR>
nnoremap <silent> <LocalLeader>$  :FufDir<CR>
nnoremap <silent> <LocalLeader>5  :FufChangeList<CR>
nnoremap <silent> <LocalLeader>6  :FufMruFile<CR>
nnoremap <silent> <LocalLeader>7  :FufLine<CR>
nnoremap <silent> <LocalLeader>8  :FufBookmark<CR> 
nnoremap <silent> <LocalLeader>*  :FuzzyFinderAddBookmark<CR><CR>
nnoremap <silent> <LocalLeader>9  :FufTaggedFile<CR> 
" " }}}
filetype plugin indent on

" color stuff
syntax on
colorscheme koehler
set t_Co=256
set cursorline
:hi CursorLine cterm=none	ctermbg=4 guibg=#555555
set cursorcolumn
:hi CursorColumn cterm=none	ctermbg=242 guibg=#555555
:hi Pmenu  cterm=bold ctermbg=242 ctermfg=14

" show line number
set nu

" hightlight search term
set hlsearch
set foldmethod=indent

" encoding
set fencs=utf-8,gbk,gb2312

" latex setting
filetype plugin indent on
set grepprg=grep\ -nH\ $*
let g:tex_flavor = "latex"
let g:Tex_DefaultTargetFormat = "pdf"
let g:Tex_ViewRule_pdf='mupdf'
let g:Tex_ViewRule_dvi='xdvi'
let g:Tex_CompileRule_pdf='xelatex --interaction=nonstopmode $*'

" Editing .vimrc
:nmap <Leader>s :source $MYVIMRC
:nmap <Leader>vv :e $MYVIMRC

" If I forgot to sudo vim a file, do that with :w!!
cmap w!! %!sudo tee > /dev/null %

" command line completion in vim
set wildchar=<Tab> wildmenu wildmode=full

" neocomplecache
let g:neocomplcache_enable_at_startup = 1

" last modified
 autocmd BufWritePre,FileWritePre *   ks|call LastMod()|'s
" autocmd BufWrite,FileWritePre * call LastMod() 
fun LastMod()
let l = line("$")
exe "1," . l . "g/[L]ast [Mm]odified: /s/[Ll]ast [Mm]odified:.*/Last modified:" .
		       	\ strftime(" %Y %b %d %X")
endfun

" Last modified: 2012 Dec 08 14:03:22
