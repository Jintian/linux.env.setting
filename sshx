#!/bin/bash
SSH_HOME=$HOME/.ssh
SSHX_HOME=$HOME/.sshx
SSHX_REGISTRY=$SSHX_HOME/sites
unamestr=`uname`
SED_OPT="-r"
if [[ "$unamestr" == 'Darwin' ]]; then
	SED_OPT="-E"
fi

mkdir $SSHX_HOME 2> /dev/null

function loadentry {
	echo Loading ssh logging info from history...
	grep -i -E "ssh\s+[a-zA-Z0-9_@]+[a-zA-Z0-9\.]+$" $HOME/.bash_history|awk '{print $2}'|sed $SED_OPT 's/(.*)/\1 n/'|sed $SED_OPT "s/^([a-zA-Z0-9\.]+\s+[yn])$/${USER}@\1/"|sort|uniq &>$SSHX_REGISTRY
}

function genkeys {
    [ -d $SSH_HOME ] || mkdir $SSH_HOME
    local idfile
    idfile=`ls $HOME/.ssh/*.pub 2> /dev/null | head -1`
    [ -z "$idfile" ] && ssh-keygen -q -t dsa -f "${SSH_HOME}/id_dsa" -N ""
}

[ -f "$SSHX_REGISTRY" ] || touch "$SSHX_REGISTRY"

if [ -z "$1" ]; then
# INTERACTIVE MODE

	#check status for loading history ssh logging info
	ln=`cat $SSHX_REGISTRY | grep -vE "^\s*$" |wc -l`
	if [ $((ln)) == 0 ]; then
		loadentry
	fi

    exec 3<&0
    exec 0<"$SSHX_REGISTRY"
    
    num=1
    while read -r line
    do
        FLAG=1
        echo -e "\t$num.) $line" | sed $SED_OPT 's/(\w+@[a-zA-Z0-9_\.]+).*/\1/' 
		let num++
    done

    exec 0<&3

    if [ "$FLAG" = "" ]; then
        echo "No registed sites info."
    else
        echo -n "Please select the sites number: "
        read SEL
        registry=`head -$SEL $SSHX_REGISTRY | tail -1`
        pat="^([a-zA-Z0-9_\.]+@[a-zA-Z0-9_\.]+)\s+([yn])$"
        if [[ $registry =~ $pat ]]; then
            h=${BASH_REMATCH[1]}
            m=${BASH_REMATCH[2]}
            if [ $m != "y" ]; then
                echo -n "Do you want to store your public key on remote machine? [y|n] "
                read ans
                if [ $ans == "y" ]; then
                    genkeys
                    idfile=`ls ~/.ssh/*.pub 2> /dev/null | head -1`
                    cat $idfile | ssh $h 'mkdir .ssh; touch ~/.ssh/authorized_keys; cat >> ~/.ssh/authorized_keys' 2>/dev/null
                    sed -i $SED_OPT "s/($h\s+)n$/\1y/g"  $SSHX_REGISTRY 
                fi
            fi
            ssh -X $h
        fi
    fi
else
# DIRECT MODE
    host=$1
    pat=".+@.+"
    if [[ ! $host =~ $pat ]]; then
        host="${USER}@${host}"
    fi
    line=`grep $host $SSHX_REGISTRY`
    if [ "$line" == "" ]; then
        echo -n "Do you want to save this host to your bookmark? [y|n] "
        read ans1
        echo -n "Do you want to store your public key on remote machine? [y|n] "
        read ans2
        if [ "$ans2" == "y" ]; then
            genkeys
            idfile=`ls $HOME/.ssh/*.pub 2> /dev/null | head -1`
            cat $idfile | ssh $host 'mkdir .ssh; touch ~/.ssh/authorized_keys; cat >> ~/.ssh/authorized_keys' 2>/dev/null
        fi
        if [ "$ans1" == "y" ]; then
            echo "$host $ans2" >> "$SSHX_REGISTRY"
        fi
    else
        pat="^(\w+@[a-zA-Z0-9_\.]+)\s+([yn])$"
        if [[ $line =~ $pat ]]; then
            h=${BASH_REMATCH[1]}
            m=${BASH_REMATCH[2]}
            if [ $m != "y" ]; then
                echo -n "Do you want to store your public key on remote machine? [y|n] "
                read ans
                if [ $ans == "y" ]; then
                    genkeys
                    idfile=`ls $HOME/.ssh/*.pub 2> /dev/null | head -1`
                    cat $idfile | ssh $h 'mkdir .ssh; touch ~/.ssh/authorized_keys; cat >> ~/.ssh/authorized_keys' 2>/dev/null
                    sed -ri "s/($h\s+)n$/\1y/g"  $SSHX_REGISTRY 
                fi
            fi
        fi
    fi
    ssh -X $1
fi
